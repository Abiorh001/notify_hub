"""create role table and add user as foreign key

Revision ID: 3c21d0bac2e7
Revises: d4404bcac339
Create Date: 2024-06-30 16:24:57.947141

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3c21d0bac2e7"
down_revision: Union[str, None] = "d4404bcac339"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("roles", sa.Column("uid", sa.UUID(), nullable=False))
    op.add_column(
        "roles",
        sa.Column(
            "permissions", postgresql.ARRAY(sa.VARCHAR(length=100)), nullable=True
        ),
    )
    op.add_column(
        "roles", sa.Column("user_uid", sqlmodel.sql.sqltypes.GUID(), nullable=True)
    )
    op.create_index(op.f("ix_roles_uid"), "roles", ["uid"], unique=False)
    op.create_foreign_key(None, "roles", "users", ["user_uid"], ["uid"])
    op.drop_column("roles", "role")
    op.drop_column("users", "role")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("role", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    )
    op.add_column(
        "roles",
        sa.Column("role", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "roles", type_="foreignkey")
    op.drop_index(op.f("ix_roles_uid"), table_name="roles")
    op.drop_column("roles", "user_uid")
    op.drop_column("roles", "permissions")
    op.drop_column("roles", "uid")
    # ### end Alembic commands ###
